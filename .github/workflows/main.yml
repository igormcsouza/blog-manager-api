name: Continuous Integration/Delivery

on:
  push:
    branches:
      - main

jobs:
  integration:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.8.2"]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install Dependencies
        run: poetry install
      - name: Run tests
        run: poetry run task test

  preparation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.8.2"
      - name: Install Dependencies
        run: poetry install
      - name: Clean the repository for next step
        run: poetry run task clean
      - name: Create blog-manager-api.zip artifact
        run: poetry run task zip
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: blog-manager-api.zip

  deploy:
    runs-on: ubuntu-latest
    needs: [integration, preparation]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Download Lambda blog-manager-api.zip
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Upload to S3
        run: aws s3 cp blog-manager-api.zip s3://blog-manager-api/blog-manager-api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name blog-manager-api --s3-bucket blog-manager-api --s3-key blog-manager-api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}